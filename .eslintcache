[{"D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\index.js":"1","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\App.js":"2","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\reportWebVitals.js":"3","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\Portfolio.js":"4","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\Feedback.js":"5","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\Wallet.js":"6","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\Header.js":"7","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\Menu.js":"8","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\reducers\\index.js":"9","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\service\\constants.js":"10","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\Layout.tsx":"11","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\AccountModal.tsx":"12","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\ConnectButton.jsx":"13","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\actionTypes\\index.js":"14","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\theme\\index.ts":"15","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\CryptoIcon\\index.tsx":"16","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\libs\\progressbar\\index.js":"17","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\Identicon.tsx":"18","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\initialState\\index.js":"19","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\libs\\progressbar\\components\\ProgressBarLine.js":"20","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\CryptoIcon\\Icon.tsx":"21","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\libs\\progressbar\\components\\Text.js":"22","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\libs\\progressbar\\components\\Path.js":"23","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\libs\\progressbar\\utils.js":"24","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\libs\\progressbar\\constants.js":"25","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\libs\\progressbar\\components\\Svg.js":"26","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\libs\\progressbar\\config\\theme.js":"27","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\CryptoIcon\\useDynamicSVGImport.tsx":"28","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\libs\\progressbar\\hooks\\usePath.js":"29","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\libs\\progressbar\\hooks\\useStrokeDashOffset.js":"30"},{"size":1203,"mtime":1643995711997,"results":"31","hashOfConfig":"32"},{"size":1563,"mtime":1643995711355,"results":"33","hashOfConfig":"32"},{"size":362,"mtime":1627534261673,"results":"34","hashOfConfig":"32"},{"size":34702,"mtime":1643995711361,"results":"35","hashOfConfig":"32"},{"size":484,"mtime":1638321421986,"results":"36","hashOfConfig":"32"},{"size":2532,"mtime":1643995711361,"results":"37","hashOfConfig":"32"},{"size":2002,"mtime":1643995711359,"results":"38","hashOfConfig":"32"},{"size":7914,"mtime":1643995711360,"results":"39","hashOfConfig":"32"},{"size":1336,"mtime":1643124040739,"results":"40","hashOfConfig":"32"},{"size":547,"mtime":1640146118146,"results":"41","hashOfConfig":"32"},{"size":378,"mtime":1638225217928,"results":"42","hashOfConfig":"32"},{"size":5066,"mtime":1643995711356,"results":"43","hashOfConfig":"32"},{"size":3251,"mtime":1643995711356,"results":"44","hashOfConfig":"32"},{"size":339,"mtime":1643124036607,"results":"45","hashOfConfig":"32"},{"size":147,"mtime":1626699938000,"results":"46","hashOfConfig":"32"},{"size":52,"mtime":1643995711357,"results":"47","hashOfConfig":"32"},{"size":269,"mtime":1643995712007,"results":"48","hashOfConfig":"49"},{"size":674,"mtime":1638214487475,"results":"50","hashOfConfig":"32"},{"size":14349,"mtime":1639900380343,"results":"51","hashOfConfig":"32"},{"size":1687,"mtime":1643995712003,"results":"52","hashOfConfig":"49"},{"size":919,"mtime":1643995711357,"results":"53","hashOfConfig":"32"},{"size":646,"mtime":1643995712004,"results":"54","hashOfConfig":"49"},{"size":1458,"mtime":1643995712002,"results":"55","hashOfConfig":"49"},{"size":239,"mtime":1643995712008,"results":"56","hashOfConfig":"49"},{"size":129,"mtime":1643995712005,"results":"57","hashOfConfig":"49"},{"size":476,"mtime":1643995712003,"results":"58","hashOfConfig":"49"},{"size":280,"mtime":1643995712004,"results":"59","hashOfConfig":"49"},{"size":2087,"mtime":1643995711359,"results":"60","hashOfConfig":"32"},{"size":1016,"mtime":1643995712006,"results":"61","hashOfConfig":"49"},{"size":342,"mtime":1643995712006,"results":"62","hashOfConfig":"49"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"e4dbqs",{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":44,"fixableErrorCount":0,"fixableWarningCount":3,"source":"72"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":24,"fixableErrorCount":0,"fixableWarningCount":0,"source":"84"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"90","messages":"91","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"100","messages":"101","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"9crpqb",{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"118","messages":"119","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"124","messages":"125","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"126","messages":"127","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"128","messages":"129","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130"},{"filePath":"131","messages":"132","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"133"},{"filePath":"134","messages":"135","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\index.js",[],"D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\App.js",["136","137","138","139"],"import { BrowserRouter as Router,Routes, Route } from \"react-router-dom\";\r\nimport { Redirect } from 'react-router'\r\n// import { Router, Route, Switch } from \"react-router\";\r\nimport { useEffect } from \"react\";\r\nimport Menu from \"./Components/Menu\";\r\nimport Portfolio from \"./Components/Portfolio.js\";\r\nimport Feedback from \"./Components/Feedback.js\";\r\nimport Wallet from \"./Components/Wallet.js\";\r\nimport Header from \"./Components/Header.js\";\r\n// import Brand from \"./Components/Brand\";\r\n// import Error from \"./Components/Error\";\r\nimport {connect,useSelector,useDispatch} from 'react-redux'\r\nimport './logo.svg';\r\nimport './App.css';\r\nimport './style.css'\r\n\r\nfunction App() {\r\n  const wallet = useSelector(state => state.walletAddress);\r\n  \r\n  return (\r\n    <div className=\"App\">\r\n      <Router>\r\n        <div className=\"d-flex\">\r\n          <Menu />\r\n          <div className=\"board\">\r\n            <Header/>\r\n            <Routes>\r\n            <Route exact path=\"/\" element={<Wallet/>}/>\r\n              <Route key={3} path=\"/wallet\" element={<Wallet/>}/>\r\n              <Route key={1} path=\"/portfolio/:id\" element={<Portfolio/>}/>\r\n              <Route key={2} path=\"/feedback\" element={<Feedback/>}/>\r\n              \r\n            </Routes>\r\n          </div>\r\n        </div>\r\n      </Router> \r\n    </div>\r\n  );\r\n}\r\nconst mapStateToProps = state => ({\r\n  portfolio_data: state.counterApp,\r\n  wallet_address: state.walletAddress\r\n})\r\n\r\n//connect function INJECTS dispatch function as a prop!!\r\nexport default connect(mapStateToProps)(App);\r\n// export default App;\r\n","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\reportWebVitals.js",[],"D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\Portfolio.js",["140","141","142","143","144","145","146","147","148","149","150","151","152","153","154","155","156","157","158","159","160","161","162","163","164","165","166","167","168","169","170","171","172","173","174","175","176","177","178","179","180","181","182","183"],"import React, { useState,useEffect } from \"react\";\r\nimport {connect,useSelector} from 'react-redux'\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select from '@mui/material/Select';\r\nimport {\r\n    portfolio_data1, portfolio_data2,\r\n    // portfolio_table_data\r\n} from \"../service/constants\"\r\n\r\nimport CryptoIcon from \"./../Components/CryptoIcon\"\r\n\r\n//20138207\r\n//https://api.polygonscan.com/api?module=block&action=getblockreward&blockno=20138207&apikey=61KZHYEFZRVZPPHR1STRS2USVZ3N4V5MJP\r\n//https://api.polygonscan.com/api?module=contract&action=getabi&address=0x510d776fea6469531f8be69e669e553c0de69621&apikey=61KZHYEFZRVZPPHR1STRS2USVZ3N4V5MJP\r\n//https://api.polygonscan.com/api?module=account&action=tokentx&address=0x704111eDBee29D79a92c4F21e70A5396AEDCc44a&startblock=20138207&endblock=20138207&sort=asc&apikey=61KZHYEFZRVZPPHR1STRS2USVZ3N4V5MJP\r\nconst Portfolio = (data) => {\r\n    const [portfolio_table1, setPortfolio_table1] = useState(portfolio_data1)\r\n    const [portfolio_table2, setPortfolio_table2] = useState(portfolio_data2)\r\n    const [portfolio_table_body_data, setPortfolio_table_body] = useState([])\r\n    const [selHeader1, setSelHeader1] = useState(10)\r\n    const [selHeader2, setSelHeader2] = useState(10)\r\n    const [sort_state, setSort_state] = useState(false)\r\n    const [typeValue, setTypeValue] = useState('all')\r\n    const [protocolValue, setProtocolValue] = useState('all')\r\n    const [filterButton, setFilterButton] = useState(false)\r\n    const [sort_image, setSort_image] = useState('../assets/images/sort_both.png')\r\n    const [type, setType] = React.useState('All');\r\n    const [chain, setChain] = React.useState('All');\r\n    const [ getTotalVal, setTotalVal ] = useState({totalCost:0,totalValue:0})\r\n    // const [isLoading,setIsLoading]= useState(false)\r\n    const isLoading = useSelector(\r\n        state  =>  state.isLoading\r\n    )\r\n    const  portfolioPreData  =  useSelector(\r\n        state  =>  state.portfolioData\r\n        );\r\n    const  [portfolioData,setportfolioData]  =  useState([]);\r\n    const handleChangeType = (event) => {\r\n        setType(event.target.value);\r\n        removeClass_show()\r\n        addClass_collapsed()\r\n      };\r\n      const handleChangeChain = (event) => {\r\n        setChain(event.target.value);\r\n        removeClass_show()\r\n        addClass_collapsed()\r\n      };\r\n      const makeHistory=(historyData)=>{\r\n          let data=[]\r\n          let level_0=0\r\n          let level_1=0\r\n          let level_2=0\r\n          let level_3=0\r\n          historyData.map((item,index)=>{\r\n              if(item.hierarchy_level==0){\r\n                  Object.assign(item,{child:[]})\r\n                  data.push(item)\r\n                  level_0++\r\n                  level_1=0\r\n                }else if(item.hierarchy_level==1){\r\n                    Object.assign(item,{child:[]})\r\n                  data[level_0-1].child.push(item)\r\n                  level_1++\r\n                  level_2=0\r\n                }else if(item.hierarchy_level==2){\r\n                    Object.assign(item,{child:[]})\r\n                  data[level_0-1].child[level_1-1].child.push(item)\r\n                  level_2++\r\n                }\r\n                else if(item.hierarchy_level==3){\r\n                    Object.assign(item,{child:[]})\r\n                  data[level_0-1].child[level_1-1].child[level_2-1].child.push(item)\r\n                  level_3++\r\n                }\r\n          })\r\n          console.log(data,'history data-----------')\r\n          return data\r\n      }\r\n      useEffect(() => {\r\n          console.log('asdf')\r\n          setportfolioData(portfolioPreData.map(item=>{\r\n            return{id: item.id,\r\n                    chain:item.chain,\r\n                    chain_id:item.chain_id,\r\n                    chain_logo: item.chain_logo,\r\n                    type: item.type,\r\n                    type_img: item.type_img,\r\n                    protocol: item.protocol,\r\n                    protocol_url: item.protocol_url,\r\n                    protocol_logo:item.protocol_logo,\r\n                    pool: item.pool,\r\n                    assets:item.assets,\r\n                    units: item.units,\r\n                    cost_basis:item.cost_basis,\r\n                    value: item.value,\r\n                    _comment: item._comment,\r\n                    profit:item.value-item.cost_basis,\r\n                    return:(item.value-item.cost_basis)/item.cost_basis*100,\r\n                    history: item.history\r\n                    // history: item.history?item.history.length>0?makeHistory(item.history):[]:[]\r\n    \r\n        }}))\r\n        },[portfolioPreData]);\r\n\r\n      useEffect(() => {\r\n        setPortfolio_table_body(portfolioData)\r\n        calc_totalVal(portfolioData)\r\n        },[portfolioData]);\r\n\r\n    const calc_totalVal=(data)=>{\r\n        setTotalVal({totalCost:data.map((item) => { return item.cost_basis }).reduce((a, b) => a + b, 0),\r\n            totalValue:data.map((item) => { return item.value }).reduce((a, b) => a + b, 0)})\r\n    }\r\n    //   const calDate=(val)=>{\r\n    //       const milliseconds = val * 1000 \r\n    //       const dateObject = new Date(milliseconds)\r\n    //       let ampm = dateObject.getUTCHours()>12?'PM':'AM'\r\n    //       const months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\r\n    //       const humanDateFormat = months[dateObject.getMonth()]+'-'+dateObject.getDate()+'-'+dateObject.getFullYear()+' '+(dateObject.getUTCHours() % 12)+':'+dateObject.getMinutes()+':'+dateObject.getSeconds()\r\n    //       +' '+ampm\r\n    //       return humanDateFormat//setDateData(humanDateFormat)\r\n    //   }\r\n      const onSort_1 = (data) => {\r\n          setSelHeader1(data)\r\n          setSelHeader2(10)\r\n          switch (data) {\r\n              case 0: portfolio_table_body_data.sort(function (a, b) {\r\n                  let x = a.type.toLowerCase();\r\n                  let y = b.type.toLowerCase();\r\n                  if (x < y && sort_state) { return -1; }\r\n                  if (x > y && sort_state) { return 1; }\r\n                  if (x < y && !sort_state) { return 1; }\r\n                  if (x > y && !sort_state) { return -1; }\r\n                  return 0;\r\n              }); break;\r\n              case 1: portfolio_table_body_data.sort(function (a, b) {\r\n                  let x = a.protocol.toLowerCase();\r\n                  let y = b.protocol.toLowerCase();\r\n                  if (x < y && sort_state) { return -1; }\r\n                  if (x > y && sort_state) { return 1; }\r\n                  if (x < y && !sort_state) { return 1; }\r\n                  if (x > y && !sort_state) { return -1; }\r\n                  return 0;\r\n              }); break;\r\n              case 2: portfolio_table_body_data.sort(function (a, b) {\r\n                  let x = a.assets[0].ticker.toLowerCase();\r\n                  let y = b.assets[0].ticker.toLowerCase();\r\n                  if (x < y && sort_state) { return -1; }\r\n                  if (x > y && sort_state) { return 1; }\r\n                  if (x < y && !sort_state) { return 1; }\r\n                  if (x > y && !sort_state) { return -1; }\r\n                  return 0;\r\n              }); break;\r\n          }\r\n          setSort_state(!sort_state)\r\n          setPortfolio_table_body([...portfolio_table_body_data])\r\n          if (sort_state) setSort_image('../assets/images/sort_top.png')\r\n          else if (!sort_state) setSort_image('../assets/images/sort_bottom.png')\r\n          removeClass_show()\r\n          addClass_collapsed()\r\n      }\r\n      const onSort_2 = (data) => {\r\n          setSelHeader2(data)\r\n          setSelHeader1(10)\r\n          switch (data) {\r\n              case 0: portfolio_table_body_data.sort(function (a, b) {\r\n                  if (sort_state) return b.cost_basis - a.cost_basis\r\n                  if (!sort_state) return a.cost_basis - b.cost_basis\r\n                  return 0;\r\n              }); break;\r\n              case 1: portfolio_table_body_data.sort(function (a, b) {\r\n                  if (sort_state) return b.value - a.value\r\n                  if (!sort_state) return a.value - b.value\r\n                  return 0;\r\n              }); break;\r\n              case 2: portfolio_table_body_data.sort(function (a, b) {\r\n                  if (sort_state) return b.profit - a.profit\r\n                  if (!sort_state) return a.profit- b.profit\r\n                  return 0;\r\n              }); break;\r\n              case 3: portfolio_table_body_data.sort(function (a, b) {\r\n                  if (sort_state) return b.return - a.return\r\n                  if (!sort_state) return a.return - b.return\r\n                  return 0;\r\n              }); break;\r\n          }\r\n          setSort_state(!sort_state)\r\n          setPortfolio_table_body([...portfolio_table_body_data])\r\n          if (sort_state) setSort_image('../assets/images/sort_top.png')\r\n          else if (!sort_state) setSort_image('../assets/images/sort_bottom.png')\r\n          removeClass_show()\r\n          addClass_collapsed()\r\n      }\r\n      const removeClass_show = () => {\r\n          var element = document.getElementsByClassName(\"collapse1\");\r\n          for(var i=0;i<element.length;i++)\r\n              element[i].classList.remove(\"show\");\r\n      }\r\n      const addClass_collapsed = () => {\r\n          var element = document.getElementsByClassName(\"td_symbol\");\r\n          for(var i=0;i<element.length;i++)\r\n              element[i].classList.add(\"collapsed\");\r\n          var element_1 = document.getElementsByClassName(\"margin-right-10\");\r\n          for(var i=0;i<element.length;i++)\r\n              element_1[i].classList.add(\"collapsed\");\r\n      }\r\n      const onProtocol = (url) => {\r\n          window.open(url);\r\n      }\r\n      const onFilterType=(value)=>{\r\n          let preTable_data = []\r\n  \r\n          console.log(value,protocolValue)\r\n          portfolioData.forEach((item, index) => {\r\n              if(protocolValue!='all'){\r\n                if(value=='all')\r\n                    if (item.protocol.toLowerCase().includes(protocolValue)){\r\n                        preTable_data.push(item);\r\n                } \r\n                else if(value!='all')\r\n                  if (item.type.toLowerCase().includes(value)\r\n                  && item.protocol.toLowerCase().includes(protocolValue)){\r\n                    preTable_data.push(item);\r\n                    \r\n                } \r\n                setTypeValue(value);\r\n            } \r\n            else if(protocolValue=='all'){\r\n                if(value=='all'){\r\n                    preTable_data.push(item);\r\n                    setTypeValue('all');\r\n                }\r\n                else if(value!='all')\r\n                    if (item.type.toLowerCase().includes(value)){\r\n                        preTable_data.push(item);\r\n                        \r\n                    }\r\n                    setTypeValue(value);\r\n                }\r\n                \r\n            }\r\n        )\r\n          setPortfolio_table_body([...preTable_data])\r\n      }\r\n      const onFilterChain=(value)=>{\r\n          let preTable_data = []\r\n          console.log(value)\r\n          portfolioData.forEach((item, index) => {\r\n                if(value!='all'){\r\n                    if(typeValue!='all'){\r\n                        if (item.type.toLowerCase().includes(typeValue)\r\n                            && item.protocol.toLowerCase().includes(value)) {\r\n                            preTable_data.push(item);\r\n                        }}\r\n                    else if(typeValue=='all'){\r\n                        if (item.protocol.toLowerCase().includes(value)) {\r\n                            preTable_data.push(item);\r\n                            \r\n                        }}\r\n                    setProtocolValue(value);\r\n                  }\r\n                else if(value=='all'){\r\n                    if(typeValue!='all'){\r\n                        if (item.type.toLowerCase().includes(typeValue)){\r\n                            preTable_data.push(item);\r\n                            setProtocolValue(value);\r\n                        }\r\n                    }\r\n                    else if(typeValue=='all'){\r\n                        preTable_data.push(item);\r\n                        \r\n                    }\r\n                  setProtocolValue('all');\r\n                \r\n              }\r\n              \r\n          })\r\n          setPortfolio_table_body([...preTable_data])\r\n      }\r\n      const onFilter=()=>{\r\n           setTypeValue('all')\r\n           setProtocolValue('all')\r\n           setType('All')\r\n           setChain('All')\r\n          switch (filterButton){\r\n              case false:setFilterButton(true);break;\r\n              case true:setPortfolio_table_body(portfolioData);setFilterButton(false);break;\r\n          }\r\n      }\r\n    //   const make_child_tree_structure=(data,item,index,index1)=>{\r\n    //         index1++\r\n    //         return <> <div className={data.hierarchy_level == 0 ? \"\" :\"collapse collapse1\"}  id={item.id + '-' + data.hierarchy_level} >\r\n    //             <div className=\"row border-1\" >\r\n    //                   <div className=\"col-3 sub-table-body sub-table-body-level d-flex\">\r\n                      \r\n    //                     {item.history.map((item2,index2)=>{\r\n    //                         return <div key={index2} className={index2==data.hierarchy_level?\"sub-tree-marker-date1\":\"sub-tree-marker-date2\"} id=\"aaa\" >\r\n    //                             {index2==data.hierarchy_level?<>{item2.hierarchy_level<item.history[item.history.length-1].hierarchy_level?<button className=\"margin-right-10 collapsed children-date\"\r\n    //                                 data-toggle=\"collapse\" target=\"_blank\" href={portfolio_table_body_data[index] ? `#${item.id + '-' + (data.hierarchy_level + 1)}` : ''}></button >\r\n    //                             :<></>}\r\n    //                             <a className=\"margin-left-10\" target=\"_blank\" href={data.transaction_url}title={data.transaction_url}>{data.datetime.slice(0, 23)}</a></>:<></>}\r\n    //                         </div>\r\n    //                     })}\r\n    //                   </div>\r\n    //                   <div className=\"col-3 sub-table-body sub-table-body-text\" title={data.token_url}>\r\n    //                       <a href={data.token_url} target=\"_blank\" className=\"sub-table-body-text\"><img className=\"sub-table-image\" src={data.token_img} />\r\n    //                       {data.token_name}</a>\r\n    //                   </div>\r\n    //                   <div className=\"col-2 sub-table-body sub-table-body-num\">+{data.units.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</div>\r\n    //                   <div className=\"col-2 sub-table-body sub-table-body-num\">${data.cost_basis.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</div>\r\n    //                   <div className=\"col-2 sub-table-body sub-table-body-num\">{data.fee_usd?'$'+data.fee_usd.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"):''}</div>\r\n    //             </div>\r\n    //             {item.history[index1] && item.history[index1].hierarchy_level == item.history[index1-1].hierarchy_level+1? make_child_tree_structure(item.history[index1],item,index,index1):()=>{return<></>}\r\n    //             }\r\n    //         </div>\r\n    //         {item.history[index1] && item.history[index1].hierarchy_level == item.history[index1-1].hierarchy_level? make_child_tree_structure(item.history[index1],item,index,index1):()=>{return<></>}}\r\n    //         </> \r\n    //   }\r\n    const make_child_tree_structure=(data,item,index,index1,num)=>{\r\n        index1++\r\n        return  <div className=\"row border-1\" >\r\n                  <div className=\"col-3 sub-table-body sub-table-body-level d-flex\">\r\n                  {data.child && data.child.length>0?<button className=\"margin-right-10 collapsed children-date\"\r\n                                style={{marginLeft:data.hierarchy_level*10+'px'}}\r\n                                data-toggle=\"collapse\" target=\"_blank\" href={portfolio_table_body_data[index] ? `#${item.id + '-' + (data.hierarchy_level)+'-'+num}` : ''}></button >:<button style={{marginLeft:data.hierarchy_level*20+'px'}}></button>}\r\n                      <a className=\"margin-left-10\" target=\"_blank\" href={data.transaction_url}title={data.transaction_url}>{data.datetime.slice(0, 23)}</a>          \r\n                    {/* {item.history.map((item2,index2)=>{\r\n                        return <div key={index2} className={index2==data.hierarchy_level?\"sub-tree-marker-date1\":\"sub-tree-marker-date2\"} id=\"aaa\" >\r\n                            {index2==data.hierarchy_level?<>{item2.hierarchy_level<item.history[item.history.length-1].hierarchy_level?<button className=\"margin-right-10 collapsed children-date\"\r\n                                data-toggle=\"collapse\" target=\"_blank\" href={portfolio_table_body_data[index] ? `#${item.id + '-' + (data.hierarchy_level + 1)}` : ''}></button >\r\n                            :<></>}\r\n                            <a className=\"margin-left-10\" target=\"_blank\" href={data.transaction_url}title={data.transaction_url}>{data.datetime.slice(0, 23)}</a></>:<></>}\r\n                        </div>\r\n                    })} */}\r\n                  </div>\r\n                  <div className=\"col-3 sub-table-body sub-table-body-text\" title={data.token_url}>\r\n                      <a href={data.token_url} target=\"_blank\" className=\"sub-table-body-text\"> <CryptoIcon img={data.token_img} type=\"color\" name={data.token_symbol??\"\"} size={25}/>  \r\n                      {/* <img className=\"sub-table-image\" src={data.token_img} /> */}\r\n                      {data.token_name}</a>\r\n                  </div>\r\n                  <div className=\"col-2 sub-table-body sub-table-body-num\">{data.units>0?'+':data.units<0?'-':''}{Math.abs(data.units).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</div>\r\n                  <div className=\"col-2 sub-table-body sub-table-body-num\">{data.cost_basis>0?'$':data.cost_basis<0?'-$':''}{Math.abs(data.cost_basis).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</div>\r\n                  <div className=\"col-2 sub-table-body sub-table-body-num\">{data.fee_usd?'$'+data.fee_usd.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"):''}</div>\r\n            </div>\r\n  }\r\n      return (\r\n          <div className=\"main-board\">\r\n              \r\n              <div className=\"main-board-title-div d-flex\">\r\n                  <div className=\"main-board-title-current-value-div\">\r\n                      Current Value\r\n                      <span className=\"main-board-title-current-value\">${getTotalVal.totalValue.toFixed(0).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</span>\r\n                  </div>\r\n                  <div className=\"main-board-title-unlealized-profit-div\">\r\n                      Unrealized Profit\r\n                      <span className=\"main-board-title-current-value\">${(getTotalVal.totalValue-getTotalVal.totalCost).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}&nbsp;<span className=\"fontWeight-500\">\r\n                          ({getTotalVal.totalCost!=0?((getTotalVal.totalValue-getTotalVal.totalCost)/getTotalVal.totalCost*100).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\"):0}%)</span></span>\r\n                  </div>\r\n                  <a className=\"main-board-title-filter-div \" onClick={()=>onFilter()} data-toggle=\"collapse\" data-target=\"#collapseExample\" aria-expanded=\"false\" aria-controls=\"collapseExample\">\r\n                      <div className=\"d-flex main-board-title-filter-btn\">\r\n                          <h6 className=\"main-board-title-filer-title\">Filter</h6>\r\n                          <img className=\"main-board-title-filer-image\" src=\"../assets/images/filter.jpg\" />\r\n                      </div>\r\n                  </a>\r\n              </div>\r\n              <div className=\"filter-button-group row collapse\"id=\"collapseExample\">\r\n                  <Box sx={{ minWidth: 120 }}>\r\n                      <FormControl fullWidth>\r\n                          <InputLabel id=\"demo-simple-select-label\">Type</InputLabel>\r\n                          <Select style={{borderColor:'#5e5e5e'}}\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={type}\r\n                          label=\"Age\"\r\n                          onChange={handleChangeType}\r\n                          >\r\n                          <MenuItem onClick={()=>onFilterType('all')}value={'All'}>All</MenuItem>\r\n                          <MenuItem onClick={()=>onFilterType('wallet')}value={'Wallet'}>Wallet</MenuItem>\r\n                          <MenuItem onClick={()=>onFilterType('yield')}value={'Yield'}>Yield Farming</MenuItem>\r\n                          <MenuItem onClick={()=>onFilterType('lending')}value={'Lending'}>Lending</MenuItem>\r\n                          </Select>\r\n                      </FormControl>\r\n                  </Box>\r\n                  <Box sx={{ minWidth: 120 }}>\r\n                      <FormControl fullWidth>\r\n                          <InputLabel id=\"demo-simple-select-label\">Chain</InputLabel>\r\n                          <Select style={{borderColor:'#5e5e5e'}}\r\n                          labelId=\"demo-simple-select-label\"\r\n                          id=\"demo-simple-select\"\r\n                          value={chain}\r\n                          label=\"Age\"\r\n                          onChange={handleChangeChain}\r\n                          // onChange={(vlaue)=>onFilterChain(value)}\r\n                          >\r\n                          <MenuItem onClick={()=>onFilterChain('all')}value={'All'}>All</MenuItem>\r\n                          <MenuItem onClick={()=>onFilterChain('ethereum')}value={'Ethereum'}>Ethereum</MenuItem>\r\n                          <MenuItem onClick={()=>onFilterChain('binance')}value={'Binance'}>Binance Smart Chain</MenuItem>\r\n                          <MenuItem onClick={()=>onFilterChain('polygon')}value={'Polygon'}>Polygon</MenuItem>\r\n                          <MenuItem onClick={()=>onFilterChain('avalanche')}value={'Avalanche'}>Avalanche</MenuItem>\r\n                          <MenuItem onClick={()=>onFilterChain('fantom')}value={'Fantom'}>Fantom</MenuItem>\r\n                          </Select>\r\n                      </FormControl>\r\n                  </Box>\r\n              </div>\r\n              <div className=\"table-board\">\r\n                  <table className=\"table portfolio-table\">\r\n                      <thead >\r\n                          <tr className=\"table-header-tr\">\r\n                              <th key=\"123\" className=\"table-header\"></th>\r\n                              {portfolio_table1.map((item, index) => {\r\n                                  return <th key={index} className=\"table-header left-area\" onClick={() => onSort_1(index)}>{item.header.toUpperCase()}\r\n                                      <img className=\"sort-image\" src={index != selHeader1 ? '../assets/images/sort_both.png' : sort_state ? '../assets/images/sort_top.png' : '../assets/images/sort_bottom.png'} /></th>\r\n                              })}\r\n                              {portfolio_table2.map((item, index) => {\r\n                                  return <th key={index} className=\"table-header  right-area\" onClick={() => onSort_2(index)}>{item.header.toUpperCase()}\r\n                                      <img className=\"sort-image\" src={index != selHeader2 ? '../assets/images/sort_both.png' : sort_state ? '../assets/images/sort_top.png' : '../assets/images/sort_bottom.png'} />\r\n                                  </th>\r\n                              })}\r\n                          </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                          {portfolio_table_body_data.map((item, index) => {\r\n                              return <><tr key={index} className=\"table-tr accordion-toggle \" \r\n                                  id=\"accordion1\" >\r\n                                  {item.history?item.history.length>0?<td className=\"table-body expand-button td_symbol  collapsed \" data-toggle=\"collapse\" href={`#${item.id}`} ></td>:\r\n                                    <td></td>:<td></td>}\r\n                                  <td className=\"table-body\"><img className=\"table-td-s-image\" src={item.type_img} />{item.type}</td>\r\n                                  <td className=\"table-body table-body-protocol\" title={item.protocol_url}>\r\n                                          <a href={item.protocol_url} target=\"_blank\">\r\n\r\n                                          <CryptoIcon name={item.chain} type={\"color\"} size={32} />{item.protocol}\r\n\r\n                                      {/* <img className=\"table-td-m-image table-td-m-image-margin\" src={item.type.toLowerCase()=='wallet'?():item.protocol_logo} />{item.protocol} */}\r\n                                      </a></td>\r\n                                  <td className=\"table-body d-flex\">\r\n                                      <div  className=\"table-assets-item d-flex\">\r\n                                          {item.assets.map((item4,index4)=>{return <CryptoIcon key={index4} name={item4.ticker} type={\"color\"} size={32} />})}\r\n\r\n                                      </div>{item.assets.map((item4,index4)=>{return <span key={index4}>{index4==0?item4.ticker:'+'+item4.ticker}</span>})}\r\n                                    </td>\r\n                                  <td className=\"table-body-num\">${item.cost_basis.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                  <td className=\"table-body-num\">${item.value.toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                  <td className=\"table-body-num\" style={{ color: item.value-item.cost_basis < 0 ? '#dd3279' : 'white' }}>{item.value-item.cost_basis < 0 ?'-':''}${Math.abs(item.value-item.cost_basis).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}</td>\r\n                                  <td className=\"table-body-num\" style={{ color: (item.value-item.cost_basis)/item.cost_basis < 0 ? '#dd3279' : 'white' }}>{((item.value-item.cost_basis)/item.cost_basis*100).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}%</td>\r\n                                </tr>\r\n                                {item.history && item.history.length>0 && <tr key={index + '-' + index} className=\"hide-table-padding\" >\r\n                                    <td colSpan=\"8\" className=\"collapes-td\">\r\n                                        <div id={item.id} className=\"collapse collapse1\">\r\n                                            <div className=\"row border-1\">\r\n                                                {/* <div className=\"col-2 sub-table-header\"> </div> */}\r\n                                                <div className=\"col-3 sub-table-header left-area\">DATE</div>\r\n                                                <div className=\"col-3 sub-table-header left-area\">TOKEN</div>\r\n                                                <div className=\"col-2 sub-table-header right-area\">UNITS</div>\r\n                                                <div className=\"col-2 sub-table-header right-area\">COST</div>\r\n                                                <div className=\"col-2 sub-table-header right-area\">FEE</div>\r\n                                            </div>\r\n                                            {item.history && item.history.length>0 ? \r\n                                                item.history.map((ele,num)=>{\r\n                                                return <div key={num} className={ele.hierarchy_level == 0 ? \"\" :\"collapse collapse1\"}  id={item.id} >\r\n                                                                {make_child_tree_structure(ele,item,index,0,num)}\r\n                                                            {ele.child && ele.child.length>0 ? \r\n                                                                ele.child.map((ele1,num1)=>{\r\n                                                                    return  <div key={num1} className={ele1.hierarchy_level == 0 ? \"\" :\"collapse collapse1\"}  id={item.id + '-' + ele.hierarchy_level + '-' + num} >\r\n                                                                                    {make_child_tree_structure(ele1,item,index,0,num+''+num1)}\r\n                                                                                {ele1.child && ele1.child.length>0 ? \r\n                                                                                    ele1.child.map((ele2,num2)=>{\r\n                                                                                        return <div key={num2} className={ele2.hierarchy_level == 0 ? \"\" :\"collapse collapse1\"}  id={item.id + '-' + ele1.hierarchy_level + '-' + num+''+num1} >\r\n                                                                                                        {make_child_tree_structure(ele2,item,index,0,num+''+num1+''+num2)}\r\n                                                                                            {ele2.child && ele2.child.length>0 ? \r\n                                                                                                ele2.child.map((ele3,num3)=>{\r\n                                                                                                    return <div key={num3} className={ele3.hierarchy_level == 0 ? \"\" :\"collapse collapse1\"}  id={item.id + '-' + ele2.hierarchy_level + '-' + num+''+num1+''+num2} >\r\n                                                                                                                {make_child_tree_structure(ele3,item,index,0,num3)}\r\n                                                                                                            </div>\r\n                                                                                                })\r\n                                                                                                :null}\r\n                                                                                        </div>\r\n                                                                                    })\r\n                                                                                    :null}\r\n                                                                            </div>\r\n                                                                })\r\n                                                                :null}\r\n                                                        </div>\r\n                                                })\r\n                                                :null\r\n                                            }\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>}\r\n                              </>\r\n                          })}\r\n  \r\n                          {portfolio_table_body_data.length > 0 ?\r\n                              <tr className=\" total-tr\">\r\n                                  <td></td>\r\n                                  <td colSpan=\"3\" className=\"table-total-title\">Total</td>\r\n                                  <td className=\"table-total-td table-body-num\">\r\n                                      ${portfolio_table_body_data.map((item) => { return item.cost_basis }).reduce((a, b) => a + b, 0).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                  </td>\r\n                                  <td className=\"table-total-td table-body-num\">\r\n                                      ${portfolio_table_body_data.map((item) => { return item.value }).reduce((a, b) => a + b, 0).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                  </td>\r\n                                  <td className=\"table-total-td table-body-num\"\r\n                                      style={{\r\n                                          color: (portfolio_table_body_data.map((item) => { return item.value }).reduce((a, b) => a + b, 0)\r\n                                              - portfolio_table_body_data.map((item) => { return item.cost_basis }).reduce((a, b) => a + b, 0)) < 0 ? '#dd3279' : 'white'\r\n                                      }}>\r\n                                      ${Math.abs(portfolio_table_body_data.map((item) => { return item.value }).reduce((a, b) => a + b, 0)\r\n                                          - portfolio_table_body_data.map((item) => { return item.cost_basis }).reduce((a, b) => a + b, 0)).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}\r\n                                  </td>\r\n                                  <td className=\"table-total-td table-body-num\"\r\n                                      style={{\r\n                                          color: (portfolio_table_body_data.map((item) => { return item.value }).reduce((a, b) => a + b, 0)\r\n                                              - portfolio_table_body_data.map((item) => { return item.cost_basis }).reduce((a, b) => a + b, 0))\r\n                                              / portfolio_table_body_data.map((item) => { return item.cost_basis }).reduce((a, b) => a + b, 0)\r\n                                              * 100 < 0 ? '#dd3279' : 'white'\r\n                                      }}\r\n                                  >\r\n                                      {Math.round((portfolio_table_body_data.map((item) => { return item.value }).reduce((a, b) => a + b, 0)\r\n                                          - portfolio_table_body_data.map((item) => { return item.cost_basis }).reduce((a, b) => a + b, 0))\r\n                                          / portfolio_table_body_data.map((item) => { return item.cost_basis }).reduce((a, b) => a + b, 0)\r\n                                          * 100).toFixed(2).toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\")}%\r\n                                  </td>\r\n                              </tr>\r\n                              : <tr className=\" total-tr total-tr-no-data\"><td colSpan=\"8\"> There is no data</td></tr>}\r\n                      </tbody>\r\n                  </table>\r\n              </div>\r\n          </div>\r\n    )\r\n}\r\n// export default Portfolio\r\nconst mapStateToProps = state => ({\r\n    portfolio_data: state.portfolioData,\r\n    wallet_address: state.walletAddress,\r\n    isLoading: state.isLoading\r\n})\r\n\r\n//connect function INJECTS dispatch function as a prop!!\r\nexport default connect(mapStateToProps)(Portfolio);","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\Feedback.js",["184","185","186","187"],"import React, { useState } from \"react\";\r\nimport {\r\n    portfolio_data1,portfolio_data2,\r\n    portfolio_table_data\r\n} from \"../service/constants\"\r\nconst Feedback = () => {\r\nreturn(\r\n    <div className=\"main-board\">\r\n        <div className=\"sub-main-board\">\r\n            <p>Please contact us at <a className=\"text-pink\" href=\"mailto:info@defireturn.app\" target=\"blank\">info@defireturn.app</a> for any feedback on this app.</p>\r\n        </div>\r\n    </div>\r\n)\r\n}\r\nexport default Feedback","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\Wallet.js",["188","189","190","191"],"import { useState, useEffect } from \"react\";\r\n// import { useDispatch } from 'react-redux'\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { CHANGE_WALLET, SELECT_MENU } from \"../actionTypes\";\r\nconst Wallet = () => {\r\n  const dispatch = useDispatch();\r\n  const [getInputWallet, setInputWallet] = useState(\"\");\r\n  const walletAddress = useSelector((state) => state.walletAddress);\r\n  useEffect(() => {\r\n    getChainList();\r\n  }, [Wallet]);\r\n  useEffect(() => {\r\n    setInputWallet(walletAddress.address);\r\n  }, [walletAddress]);\r\n\r\n  const changeWalletAddress = (e) => {\r\n    setInputWallet(e.target.value);\r\n  };\r\n  const connectWallet = () => {\r\n    connectWallet_withoutMetamask();\r\n  };\r\n  const connectWallet_withoutMetamask = () => {\r\n    if (getInputWallet != \"\") {\r\n      dispatch({ type: CHANGE_WALLET, payload: getInputWallet });\r\n      dispatch({ type: SELECT_MENU, payload: 1 });\r\n    }\r\n  };\r\n  const enterWallet = (e) => {\r\n    if (e.key == \"Enter\") connectWallet_withoutMetamask();\r\n  };\r\n  const getChainList = async () => {\r\n    const chainList = await axios.get(\r\n      \"https://api.debank.com/portfolio/project_list?user_addr=0x3ddfa8ec3052539b6c9549f12cea2c295cff5296\"\r\n    );\r\n    console.log(chainList.data, \"chainList----\");\r\n  };\r\n  return (\r\n    <div className=\"main-board\">\r\n      <div className=\"sub-main-board-w\">\r\n        <div className=\"sub-main-board-h\">\r\n          <h4 className=\"wallet-title\">\r\n            How are your <span className=\"wallet-sub-div\">DeFi</span>{\" \"}\r\n            investments performing?\r\n          </h4>\r\n          <p className=\"wallet-small-title\">Your Wallet</p>\r\n          <input\r\n            className=\"wallet-input form-control\"\r\n            placeholder=\"Enter your wallet\"\r\n            onChange={(val) => changeWalletAddress(val)}\r\n            onKeyUp={(e) => enterWallet(e)}\r\n            value={getInputWallet}\r\n          />\r\n          <Link\r\n            className=\"btn wallet-connect\"\r\n            to={getInputWallet != \"\" ? \"/portfolio/\" + getInputWallet : \"/\"}\r\n            onClick={() => connectWallet()}\r\n          >\r\n            Connect Now\r\n          </Link>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n// export default Wallet\r\nconst mapStateToProps = (state) => ({\r\n  portfolio_data: state.portfolioData,\r\n  wallet_address: state.walletAddress,\r\n});\r\n\r\n//connect function INJECTS dispatch function as a prop!!\r\nexport default connect(mapStateToProps)(Wallet);\r\n","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\Header.js",["192","193","194","195","196","197","198","199","200","201","202","203"],"import React, { useState ,useEffect} from \"react\";\r\nimport { useLocation } from 'react-router-dom'\r\n// import Account from \"./Account\";\r\nimport { useDispatch } from 'react-redux'\r\nimport { ChakraProvider, useDisclosure } from \"@chakra-ui/react\";\r\n// import { browserHistory } from 'react-router';\r\n// import RLogin, { RLoginButton } from '@rsksmart/rlogin'\r\nimport theme from \"./theme\";\r\n// import WalletConnectProvider from '@walletconnect/web3-provider'\r\nimport Layout from \"./Layout\";\r\nimport ConnectButton from \"./ConnectButton\";\r\nimport AccountModal from \"./AccountModal\";\r\nimport {CHANGE_WALLET,PORTFOLIO_DATA} from \"../actionTypes\";\r\n\r\nconst Header=({ history })=>{\r\n    const location = useLocation();\r\n    const dispatch = useDispatch()\r\n    const [headerTitle, setHeaderTitle]=useState(location.pathname)\r\n    const [loading, setLoading] = useState(false);\r\n    const [provider, setProvider] = useState(null)\r\n    const [account, setAccount] = useState(null)\r\n    const { isOpen, onOpen, onClose } = useDisclosure();\r\n    useEffect(() => {\r\n      console.log(headerTitle,'account---',location.pathname.split('/')[2])\r\n      dispatch({type:CHANGE_WALLET,payload:location.pathname.split('/')[2]});\r\n    },[Header]);\r\n\r\n\r\n    return(\r\n\r\n      <div className=\"d-flex header-div\" >\r\n        {/* <Account/> */}\r\n      <ChakraProvider >\r\n        <Layout>\r\n          <div className=\"d-flex header-title-div\">\r\n            <h3 className=\"header-title col-4 col-sm-3 col-md-2 col-lg-2 col-xl-2\">{location.pathname.split('/')[1]!=\"\"?location.pathname.split('/')[1].charAt(0).toUpperCase()+location.pathname.split('/')[1].slice(1):'Wallet'}</h3>\r\n              \r\n            <div className=\"wallet-button col-6 col-sm-8 col-md-10 col-lg-10 col-xl-10\">\r\n              <ConnectButton handleOpenModal={()=>{}} />\r\n              <AccountModal isOpen={isOpen} onClose={onClose} />\r\n            </div>\r\n          </div>\r\n        </Layout>\r\n      </ChakraProvider>\r\n      </div>\r\n    )\r\n}\r\nexport default Header","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\Menu.js",["204","205","206","207","208","209","210","211","212","213","214","215","216","217","218","219","220","221","222","223","224","225","226","227"],"import React, { useState, useEffect } from \"react\";\r\nimport \"@trendmicro/react-sidenav/dist/react-sidenav.css\";\r\nimport { connect, useSelector, useDispatch } from \"react-redux\";\r\n// import ProgressBar from \"@ramonak/react-progress-bar\";\r\nimport {ProgressBarLine} from './../libs/progressbar'\r\nimport {\r\n  BrowserRouter,\r\n  Route,\r\n  Link,\r\n  useNavigate,\r\n  useLocation,\r\n} from \"react-router-dom\";\r\nimport { SELECT_MENU, PORTFOLIO_DATA, SET_LOADING } from \"../actionTypes\";\r\nimport CONFIG from './../config.json'\r\nimport axios  from \"axios\"\r\nimport CryptoIcon from \"./../Components/CryptoIcon\"\r\nimport DefaultIcon from \"./../assets/svg/crypto/color/generic.svg\";\r\n\r\nlet interval\r\n\r\nconst Menu = () => {\r\n  const [progressVal, setProgressVal]=useState(0)\r\n  const [chainVal, setChainVal]=useState('')\r\n  const [currentVal, setCurrentVal]=useState(0)\r\n  const [totalVal, setTotalVal]=useState(0)\r\n  const menuSelectItem = useSelector((state) => state.menuSelectItem.item);\r\n  const walletAddress = useSelector((state) => state.walletAddress.address);\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    console.log(location.pathname.split(\"/\")[1]);\r\n\r\n    // console.log(res)\r\n    //\r\n    switch (location.pathname.split(\"/\")[1]) {\r\n      case \"wallet\":\r\n        dispatch({ type: SELECT_MENU, payload: 0 });\r\n        break;\r\n      case \"portfolio\":\r\n        dispatch({ type: SELECT_MENU, payload: 1 });\r\n        break;\r\n      case \"feedback\":\r\n        dispatch({ type: SELECT_MENU, payload: 2 });\r\n        break;\r\n    }\r\n  }, [Menu]);\r\n  useEffect(() => {\r\n    if (typeof walletAddress != \"undefined\" && walletAddress.length > 0) {\r\n      dispatch({type:PORTFOLIO_DATA,payload:[]})//https://git.heroku.com/guarded-beach-12345.git\r\n      \r\n      setIsLoading(true);\r\n      setProgressVal(0)\r\n      \r\n      interval = setInterval(async ()=>{\r\n        try{\r\n            let response = await axios.get(`${CONFIG.server}/status/${walletAddress}`)\r\n            response = response.data\r\n            if(response.progress){\r\n              setTotalVal(response.total)\r\n              setCurrentVal(response.current)\r\n              setChainVal(response.chain)\r\n              setProgressVal(response.progress)\r\n            }\r\n        }catch(e){\r\n            console.log(\"status err\", e)\r\n        }\r\n      }, 3200);\r\n\r\n      axios\r\n        .get(\r\n          `${CONFIG.server}/wallet/${walletAddress}` //TODO: Multi chain\r\n        )\r\n        .then((response) => {    \r\n          setProgressVal(100)\r\n          clearInterval(interval)\r\n          setTimeout(()=>{\r\n            dispatch({\r\n              type: PORTFOLIO_DATA,\r\n              //payload: response.data.portfolioData,\r\n              payload: response.data?response.data:[],\r\n            });    \r\n            setIsLoading(false)\r\n          }, 1000)\r\n        }).catch( e=> {\r\n          setIsLoading(false);\r\n          setProgressVal(0)\r\n          clearInterval(interval)\r\n        })\r\n    }\r\n  }, [walletAddress, Menu]);\r\n  const onMenuClick = (index) => {\r\n    if ((walletAddress == \"\" || walletAddress == undefined) && index == 1)\r\n      index = 0;\r\n    dispatch({ type: SELECT_MENU, payload: index });\r\n  };\r\n\r\n  const handleOpenJSON = (e) => {\r\n    var input, file, fr;\r\n    console.log(e.target.files[0]);\r\n    file = e.target.files[0];\r\n    fr = new FileReader();\r\n    fr.onload = receivedText;\r\n    fr.readAsText(file);\r\n    var a = document.getElementById(\"open_json_file\");\r\n    a.value = \"\";\r\n  };\r\n  function receivedText(e) {\r\n    let lines = e.target.result;\r\n    let userData = null;\r\n\r\n    try {\r\n      userData = JSON.parse(lines);\r\n    } catch (e) {\r\n      userData = lines;\r\n    }\r\n\r\n    dispatch({ type: PORTFOLIO_DATA, payload: userData });\r\n\r\n    //  navigate(\"/portfolio/\"+walletAddress, { replace: true });\r\n  }\r\n\r\n  return (\r\n    <div className=\"sidebar\">\r\n      \r\n      {/* <DefaultIcon/> */}\r\n\r\n\r\n      \r\n      {/* <CryptoIcon  name={\"eth\"} type={\"color\"} size={32} /> */}\r\n      {isLoading ? (\r\n        <div\r\n          style={{\r\n            position: \"absolute\",\r\n            left: 0,\r\n            top: 0,\r\n            bottom: 0,\r\n            right: 0,\r\n            backgroundColor: \"#10003044\",\r\n            zIndex: 100000,\r\n          }}\r\n        >\r\n          {/* <div id=\"loader\"></div> */}\r\n          <div style={{paddingLeft:'25%',paddingRight:'25%',paddingTop:500, color: '#fff'}}>\r\n            {/* <ProgressBar completed={progressVal} maxCompleted={100} /> */}\r\n            <ProgressBarLine trailWidth={2} strokeWidth={2} styles={{\r\n              path: {\r\n                stroke: '#2dca73'\r\n              },\r\n              text: {\r\n                fill: '#fff',\r\n              }\r\n            }} value={progressVal}/>\r\n            <div style={{textAlign: 'center', color: '#fff'}}>{totalVal?`Calculating ${chainVal} P&L (Position ${currentVal} of  ${totalVal})`: \"Pending: \" + chainVal }</div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n      <div className=\" defi-logo\">\r\n        <div className=\"logo d-flex\">\r\n          <img className=\"defi-image\" src=\"../assets/images/defi-icon.jpg\" />\r\n          <h4 className=\"defi-title\">DefiReturn</h4>\r\n        </div>\r\n      </div>\r\n      <nav className=\"navbar bg-light left-navbar\">\r\n        <ul className=\"navbar-nav\">\r\n          <Link className=\"nav-link\" to=\"/wallet\">\r\n            <li\r\n              className=\"nav-item  d-flex\"\r\n              onClick={() => onMenuClick(0)}\r\n              style={{\r\n                backgroundColor: menuSelectItem == 0 ? \"#081945\" : \"#14224f\",\r\n              }}\r\n            >\r\n              <img className=\"menu-icon\" src=\"../assets/images/wallet.jpg\" />\r\n              <h6 className=\"menu-item-text\">Wallet</h6>\r\n            </li>\r\n          </Link>\r\n          <Link\r\n            className=\"nav-link\"\r\n            to={\r\n              walletAddress != \"\" && walletAddress != undefined\r\n                ? \"/portfolio/\" + walletAddress\r\n                : \"/wallet\"\r\n            }\r\n          >\r\n            <li\r\n              className=\"nav-item d-flex\"\r\n              onClick={() => onMenuClick(1)}\r\n              style={{\r\n                backgroundColor:\r\n                  walletAddress != \"\"\r\n                    ? menuSelectItem == 1\r\n                      ? \"#081945\"\r\n                      : \"#14224f\"\r\n                    : \"#14224f\",\r\n              }}\r\n            >\r\n              <img className=\"menu-icon\" src=\"../assets/images/portfolio.jpg\" />\r\n              <h6 className=\"menu-item-text\">Portfolio</h6>\r\n            </li>\r\n          </Link>\r\n          <Link className=\"nav-link\" to=\"/feedback\">\r\n            <li\r\n              className=\"nav-item d-flex\"\r\n              onClick={() => onMenuClick(2)}\r\n              style={{\r\n                backgroundColor: menuSelectItem == 2 ? \"#081945\" : \"#14224f\",\r\n              }}\r\n            >\r\n              <img className=\"menu-icon\" src=\"../assets/images/feedback.jpg\" />\r\n              <h6 className=\"menu-item-text\">Feedback</h6>\r\n            </li>\r\n          </Link>\r\n        </ul>\r\n        <span className=\"btn btn-default btn-file\">\r\n          open JSON File{\" \"}\r\n          <input\r\n            type=\"file\"\r\n            id=\"open_json_file\"\r\n            name=\"front\"\r\n            onChange={(e) => handleOpenJSON(e)}\r\n            className=\"ImageUpload\"\r\n            accept=\"json/*\"\r\n          />\r\n        </span>\r\n      </nav>\r\n      <div className=\"menu-image-div\">\r\n        <img className=\"menu-image\" src=\"../assets/images/menu-image.jpg\" />\r\n      </div>\r\n      <nav className=\"navbar bg-light left-navbar left-navbar-1\"></nav>\r\n    </div>\r\n  );\r\n};\r\nconst mapStateToProps = (state) => ({\r\n  menuSelectItem: state.menuSelectItem,\r\n  walletAddress: state.walletAddress,\r\n});\r\n\r\n//connect function INJECTS dispatch function as a prop!!\r\nexport default connect(mapStateToProps)(Menu);","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\reducers\\index.js",["228","229","230"],"import {combineReducers} from 'redux'\nimport {initialState} from \"../initialState\";\nimport {ADD_COUNTER, MIN_COUNTER, SET_LOADING, PORTFOLIO_DATA, CHANGE_WALLET, SELECT_MENU} from \"../actionTypes\";\n\nexport function portfolioData(state = [], action) {\n    console.log(action)\n    switch (action.type) {\n        case PORTFOLIO_DATA:\n            return action.payload\n        default:\n            return state\n    }\n\n    // return state;\n}\nexport function walletAddress(state = {address:''}, action) {\n    console.log(action)\n    switch (action.type) {\n        case CHANGE_WALLET:\n            return {\n                address: action.payload\n            }\n        default:\n            return state\n    }\n\n    // return state;\n}\nexport function menuSelectItem(state = {item:0}, action) {\n    switch (action.type) {\n        case SELECT_MENU:\n            return {\n                item: action.payload\n            }\n        default:\n            return state\n    }\n\n    // return state;\n}\nexport function isLoading(state = false, action) {\n    switch (action.type) {\n        case SET_LOADING:\n            return {\n                action\n            }\n        default:\n            return state\n    }\n\n    // return state;\n}\n\nconst rootReducer = combineReducers({portfolioData,walletAddress,menuSelectItem,isLoading})\n\nexport default rootReducer;","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\service\\constants.js",[],"D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\Layout.tsx",[],"D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\AccountModal.tsx",["231","232","233","234","235"],"import {\r\n  Box,\r\n  Button,\r\n  Flex,\r\n  Link,\r\n  Modal,\r\n  ModalOverlay,\r\n  ModalContent,\r\n  ModalHeader,\r\n  ModalFooter,\r\n  ModalBody,\r\n  ModalCloseButton,\r\n  Text,\r\n} from \"@chakra-ui/react\";\r\nimport {connect,useSelector,useDispatch} from 'react-redux'\r\nimport { useLocation, useNavigate  } from 'react-router-dom'\r\nimport { ExternalLinkIcon, CopyIcon } from \"@chakra-ui/icons\";\r\nimport Identicon from \"./Identicon\";\r\nimport {CHANGE_WALLET,SELECT_MENU} from \"../actionTypes\";\r\n\r\ntype Props = {\r\n  isOpen: any;\r\n  onClose: any;\r\n};\r\n\r\n function AccountModal({ isOpen, onClose }: Props) {\r\n  // const  wallet  =  useSelector(state  =>  state.walletAddress);\r\n  const dispatch = useDispatch()\r\n  const navigate = useNavigate();\r\n  function handleDeactivateAccount() {\r\n    goWallet()\r\n    onClose();\r\n    console.log('asdf')\r\n  }\r\n  const goWallet = () => {\r\n    dispatch({type:CHANGE_WALLET,payload:''})\r\n    dispatch({type:SELECT_MENU,payload:0})\r\n    navigate(\"/wallet\", { replace: true });\r\n    \r\n  }\r\n  const onCopyAddress = () => {\r\n    navigator.clipboard.writeText('');\r\n    ;\r\n  }\r\n  return (\r\n    <Modal isOpen={isOpen} onClose={onClose} isCentered size=\"md\">\r\n      <ModalOverlay />\r\n      <ModalContent\r\n        background=\"gray.900\"\r\n        border=\"1px\"\r\n        borderStyle=\"solid\"\r\n        borderColor=\"gray.700\"\r\n        borderRadius=\"3xl\"\r\n      >\r\n        <ModalHeader color=\"white\" px={4} fontSize=\"lg\" fontWeight=\"medium\">\r\n          Account\r\n        </ModalHeader>\r\n        <ModalCloseButton\r\n          color=\"white\"\r\n          fontSize=\"sm\"\r\n          _hover={{\r\n            color: \"whiteAlpha.700\",\r\n          }}\r\n        />\r\n        <ModalBody pt={0} px={4}>\r\n          <Box\r\n            borderRadius=\"3xl\"\r\n            border=\"1px\"\r\n            borderStyle=\"solid\"\r\n            borderColor=\"gray.600\"\r\n            px={5}\r\n            pt={4}\r\n            pb={2}\r\n            mb={3}\r\n          >\r\n            <Flex justifyContent=\"space-between\" alignItems=\"center\" mb={3}>\r\n              <Text color=\"gray.400\" fontSize=\"sm\">\r\n                Connected with MetaMask\r\n              </Text>\r\n              <Button\r\n                variant=\"outline\"\r\n                size=\"sm\"\r\n                borderColor=\"blue.800\"\r\n                borderRadius=\"3xl\"\r\n                color=\"blue.500\"\r\n                fontSize=\"13px\"\r\n                fontWeight=\"normal\"\r\n                px={2}\r\n                height=\"26px\"\r\n                _hover={{\r\n                  background: \"none\",\r\n                  borderColor: \"blue.300\",\r\n                  textDecoration: \"underline\",\r\n                }}\r\n                onClick={handleDeactivateAccount}\r\n              >\r\n                Change\r\n              </Button>\r\n            </Flex>\r\n            <Flex alignItems=\"center\" mt={2} mb={4} lineHeight={1}>\r\n              <Identicon />\r\n              <Text\r\n                id=\"wallet_address\"\r\n                color=\"white\"\r\n                fontSize=\"xl\"\r\n                fontWeight=\"semibold\"\r\n                ml=\"2\"\r\n                lineHeight=\"1.1\"\r\n              >\r\n                {/* {account &&\r\n                  `${account.slice(0, 6)}...${account.slice(\r\n                    account.length - 4,\r\n                    account.length\r\n                  )}`} */}\r\n              </Text>\r\n            </Flex>\r\n            <Flex alignContent=\"center\" m={3}>\r\n              <Button\r\n                onClick={() => onCopyAddress()}\r\n                variant=\"link\"\r\n                color=\"gray.400\"\r\n                fontWeight=\"normal\"\r\n                fontSize=\"sm\"\r\n                _hover={{\r\n                  textDecoration: \"none\",\r\n                  color: \"whiteAlpha.800\",\r\n                }}\r\n              >\r\n                <CopyIcon mr={1} />\r\n                Copy Address\r\n              </Button>\r\n              {/* <Link\r\n                fontSize=\"sm\"\r\n                display=\"flex\"\r\n                alignItems=\"center\"\r\n                href={`https://ropsten.etherscan.io/address/${account}`}\r\n                isExternal\r\n                color=\"gray.400\"\r\n                ml={6}\r\n                _hover={{\r\n                  color: \"whiteAlpha.800\",\r\n                  textDecoration: \"underline\",\r\n                }}\r\n              >\r\n                <ExternalLinkIcon mr={1} />\r\n                View on Explorer\r\n              </Link> */}\r\n            </Flex>\r\n          </Box>\r\n        </ModalBody>\r\n        <ModalFooter\r\n          justifyContent=\"end\"\r\n          background=\"gray.700\"\r\n          borderBottomLeftRadius=\"3xl\"\r\n          borderBottomRightRadius=\"3xl\"\r\n          p={6}\r\n        >\r\n          <Text\r\n            color=\"white\"\r\n            textAlign=\"left\"\r\n            fontWeight=\"medium\"\r\n            fontSize=\"md\"\r\n          >\r\n            Your transactions willl appear here...\r\n          </Text>\r\n        </ModalFooter>\r\n      </ModalContent>\r\n    </Modal>\r\n  );\r\n}\r\n// const mapStateToProps = (state) => ({\r\n//   walletAddress: state.walletAddress\r\n// })\r\n\r\nexport default AccountModal//connect(mapStateToProps)();\r\n","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\ConnectButton.jsx",["236","237","238","239","240"],"import { useState, useEffect } from \"react\";\r\nimport { Button, Box, Text } from \"@chakra-ui/react\";\r\nimport {connect,useSelector,useDispatch} from 'react-redux'\r\nimport {CHANGE_WALLET} from \"../actionTypes\";\r\nimport Identicon from \"./Identicon\";\r\nimport {ethers} from 'ethers'\r\n// import { rootReducer } from '../reducers';\r\n\r\n\r\n// interface WalletAddress {\r\n//   address: '';\r\n// }\r\nconst ConnectButton=( {handleOpenModal})=> {\r\n  // const { activateBrowserWallet, account } = useEthers();\r\n  const [isModalVisible, setIsModalVisible] = useState(false);\r\n  const dispatch = useDispatch()\r\n  const wallet = useSelector(state => state.walletAddress);\r\n  const [walletAddress,setWalletAddress]=useState('')\r\n\r\n  // useEffect(() => {\r\n  //   setWalletAddress(account)\r\n  //   if(account!=\"\"&&account!=null)dispatch({type:CHANGE_WALLET,payload:isAuthenticated?account:\"\"})\r\n  // },[isAuthenticated]);\r\n\r\n  useEffect(() => {\r\n    setWalletAddress(wallet.address)\r\n    if(wallet.address!=undefined)dispatch({type:CHANGE_WALLET,payload:wallet.address})\r\n  },[wallet.address]);\r\n\r\n  // function handleConnectWallet() {\r\n  //   console.log(chainId,'chainid---****',account,isAuthenticated)\r\n  //   authenticate()\r\n  // }\r\n\r\n  const connect = async () => {\r\n    const userProvider = new ethers.providers.Web3Provider(window.ethereum, \"any\")\r\n    await userProvider.send(\"eth_requestAccounts\", []);\r\n    const signer = userProvider.getSigner()\r\n    const wallet = await signer.getAddress()\r\n    dispatch({type:CHANGE_WALLET,payload:wallet})\r\n\r\n    // setProvider(userProvider)\r\n\r\n    // provider.request({ method: 'koge_accounts' }).then(([account]) => setAccount(account))\r\n}\r\n\r\n  return walletAddress&&walletAddress!=\"\"? (\r\n    <Box\r\n      display=\"flex\"\r\n      alignItems=\"center\"\r\n      background=\"gray.700\"\r\n      borderRadius=\"xl\"\r\n      py=\"0\"\r\n    >\r\n      <Box px=\"3\">\r\n        <Text color=\"white\" fontSize=\"md\">\r\n          Connected\r\n        </Text>\r\n      </Box>\r\n      <Button\r\n        onClick={handleOpenModal}\r\n        bg=\"gray.800\"\r\n        border=\"1px solid transparent\"\r\n        _hover={{\r\n          border: \"1px\",\r\n          borderStyle: \"solid\",\r\n          borderColor: \"blue.400\",\r\n          backgroundColor: \"gray.700\",\r\n        }}\r\n        borderRadius=\"xl\"\r\n        m=\"1px\"\r\n        px={3}\r\n        height=\"38px\"\r\n      >\r\n        <Text color=\"white\" fontSize=\"md\" fontWeight=\"medium\" mr=\"2\">\r\n          {walletAddress &&\r\n            `${walletAddress.slice(0, 6)}...${walletAddress.slice(\r\n              walletAddress.length - 4,\r\n              walletAddress.length\r\n            )}`}\r\n        </Text>\r\n        <Identicon />\r\n      </Button>\r\n    </Box>\r\n  ) : (\r\n    <Button\r\n      onClick={connect}\r\n      bg=\"blue.800\"\r\n      color=\"blue.300\"\r\n      fontSize=\"lg\"\r\n      fontWeight=\"medium\"\r\n      borderRadius=\"xl\"\r\n      border=\"1px solid transparent\"\r\n      _hover={{\r\n        borderColor: \"blue.700\",\r\n        color: \"blue.400\",\r\n      }}\r\n      _active={{\r\n        backgroundColor: \"blue.800\",\r\n        borderColor: \"blue.700\",\r\n      }}\r\n    >\r\n      Connect Wallet\r\n    </Button>\r\n  );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n  walletAddress: state.walletAddress\r\n})\r\n\r\nexport default connect(mapStateToProps)(ConnectButton);","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\actionTypes\\index.js",[],"D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\theme\\index.ts",[],"D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\CryptoIcon\\index.tsx",[],"D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\libs\\progressbar\\index.js",[],"D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\Identicon.tsx",[],"D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\initialState\\index.js",[],"D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\libs\\progressbar\\components\\ProgressBarLine.js",["241"],"import React from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport { ThemeProvider } from 'styled-components'\r\n\r\nimport { VIEWBOX_X2 } from '../constants'\r\n\r\nimport baseStyles from '../config/theme'\r\nimport { calculateSafeValue } from '../utils'\r\n\r\nimport Svg from './Svg'\r\nimport Path from './Path'\r\nimport Text from './Text'\r\n\r\nconst ProgressBarLine = ({\r\n  value: propValue,\r\n  min,\r\n  max,\r\n  strokeWidth,\r\n  trailWidth,\r\n  text,\r\n  flip,\r\n  styles\r\n}) => {\r\n  const [value, setValue] = React.useState(max)\r\n\r\n  React.useEffect(() => {\r\n    const safeValue = calculateSafeValue({ min, max, propValue })\r\n    setValue(((safeValue - min) * VIEWBOX_X2) / (max - min))\r\n  }, [propValue])\r\n\r\n  const theme = Object.assign({}, baseStyles, styles)\r\n\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <Text text={text} value={value} />\r\n      <Svg strokeWidth={strokeWidth}>\r\n        <Path\r\n          trail\r\n          value={VIEWBOX_X2}\r\n          min={min}\r\n          max={max}\r\n          strokeWidth={strokeWidth}\r\n          trailWidth={trailWidth}\r\n        />\r\n        <Path\r\n          value={value}\r\n          min={min}\r\n          max={max}\r\n          strokeWidth={strokeWidth}\r\n          trailWidth={trailWidth}\r\n          flip={flip}\r\n        />\r\n      </Svg>\r\n    </ThemeProvider>\r\n  )\r\n}\r\n\r\nProgressBarLine.defaultProps = {\r\n  value: 50,\r\n  min: 0,\r\n  max: 100,\r\n  strokeWidth: 5,\r\n  trailWidth: 5\r\n}\r\n\r\nProgressBarLine.propTypes = {\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\r\n    .isRequired,\r\n  min: PropTypes.number,\r\n  max: PropTypes.number,\r\n  strokeWidth: PropTypes.number,\r\n  trailWidth: PropTypes.number\r\n}\r\n\r\nexport default ProgressBarLine\r\n","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\CryptoIcon\\Icon.tsx",["242"],"import React from \"react\";\r\nimport useDynamicSVGImport from \"./useDynamicSVGImport\";\r\nimport { IconProps } from \"./types/interfaces\";\r\n\r\n/**\r\n * Simple wrapper for dynamic SVG import hook. You can implement your own wrapper,\r\n * or even use the hook directly in your components.\r\n */\r\nconst Icon: React.FC<IconProps> = ({\r\n    name,\r\n    size,\r\n    type,\r\n    img,\r\n    onCompleted,\r\n    onError,\r\n    ...rest\r\n}): any => {\r\n    const { error, loading, url } = useDynamicSVGImport(name?.toLowerCase()??\"\", type, {\r\n        onCompleted,\r\n        onError,\r\n    });\r\n    if (error) {\r\n        return <p>{error.message}</p>;\r\n    }\r\n    if (loading) {\r\n        return <p>Loading...</p>;\r\n    }\r\n    if (url) {\r\n        // <img {...rest} src={url} style={{ height: size, width: size }}></img>\r\n        return <img src={url} style={{ height: size, width: size }}></img>;\r\n    }\r\n    return null;\r\n};\r\n\r\nexport default Icon;\r\n","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\libs\\progressbar\\components\\Text.js",[],"D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\libs\\progressbar\\components\\Path.js",[],"D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\libs\\progressbar\\utils.js",[],"D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\libs\\progressbar\\constants.js",[],"D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\libs\\progressbar\\components\\Svg.js",[],"D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\libs\\progressbar\\config\\theme.js",[],"D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\Components\\CryptoIcon\\useDynamicSVGImport.tsx",["243","244","245","246","247","248"],"import React, { useEffect, useRef, useState } from \"react\";\r\nimport { DynamicSVGImportOptions } from \"./types/interfaces\";\r\n\r\nfunction importAll(r: any) {\r\n\tlet images: any = {};\r\n  r.keys().forEach((item: any, index: number) => { images[item.replace('./', '')] = r(item); });\r\n\treturn images\r\n}\r\n\r\nconst images = importAll((require as any).context('./../../assets', true, /\\.(png|jpe?g|svg)$/));\r\n\r\nconst def = images['svg/crypto/color/generic.svg']\r\n\r\n\r\nexport default function useDynamicSVGImport(\r\n    name: string,\r\n    type: string | undefined,\r\n    options: DynamicSVGImportOptions = {},\r\n) {\r\n\r\n    const [url, setUrl] = useState(def.default)\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState<Error>();\r\n\r\n    const { onCompleted, onError } = options;\r\n\r\n    useEffect(() => {\r\n        let t = \"\"\r\n        \r\n        if(type)\r\n            t = type + \"/\"\r\n\r\n        // setLoading(true);\r\n\r\n        let path = images[`svg/crypto/${t}${name}.svg`]\r\n\r\n        if(!path && name[0] == 'w'){\r\n            path = images[`svg/crypto/${t}${name.substring(1)}.svg`]\r\n        }\r\n        path = path??def\r\n\r\n        setUrl(path.default)\r\n\r\n        // const importIcon = async (): Promise<void> => {\r\n            \r\n        //     try {\r\n        //         (ImportedIconRef as any).current = DefaultIcon;\r\n        //         onCompleted?.(name, ImportedIconRef.current);\r\n        //     } catch (err: any) {\r\n        //         console.log({err})\r\n        //         if (err.message.includes(\"Cannot find module\")) {\r\n        //             ImportedIconRef.current = def\r\n        //             onCompleted?.(name, ImportedIconRef.current);\r\n        //         } else {\r\n        //             console.error(\"IMPORT ERROR\", err.message);\r\n        //             onError?.(err);\r\n        //             setError(err);\r\n        //         }\r\n        //     } finally {\r\n        //         setLoading(false);\r\n        //     }\r\n        // };\r\n        // importIcon();\r\n    }, [name, onCompleted, onError]);\r\n\r\n    return { error, type, loading, url };\r\n}\r\n","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\libs\\progressbar\\hooks\\usePath.js",["249","250"],"import React from 'react'\r\n\r\nimport useStrokeDashOffset from './useStrokeDashOffset'\r\n\r\nimport { VIEWBOX_X1, VIEWBOX_X2 } from '../constants'\r\n\r\nexport default function usePath({\r\n  min,\r\n  max,\r\n  value,\r\n  strokeWidth,\r\n  trailWidth,\r\n  flip\r\n}) {\r\n  const [dashArray, setDashArray] = React.useState(max)\r\n  const [draw, setDraw] = React.useState('')\r\n\r\n  const x1 = flip ? VIEWBOX_X2 : VIEWBOX_X1\r\n  const x2 = flip ? VIEWBOX_X1 : VIEWBOX_X2\r\n\r\n  React.useEffect(() => {\r\n    const center =\r\n      (strokeWidth > trailWidth\r\n        ? Math.max(strokeWidth, trailWidth)\r\n        : Math.min(strokeWidth, trailWidth)) / 2\r\n\r\n    setDraw(`\r\n      M ${x1},${center}\r\n      L ${x2},${center}\r\n    `)\r\n  }, [strokeWidth, trailWidth])\r\n\r\n  const ref = React.useCallback(\r\n    (pathEl) => {\r\n      if (pathEl !== null) {\r\n        setDashArray(pathEl.getTotalLength())\r\n      }\r\n    },\r\n    [draw]\r\n  )\r\n\r\n  return [\r\n    ref,\r\n    draw,\r\n    dashArray,\r\n    ...useStrokeDashOffset({ min, max, value, dashArray })\r\n  ]\r\n}\r\n","D:\\Documents-Alon\\DefiReturn Code\\defireturn_ui\\src\\libs\\progressbar\\hooks\\useStrokeDashOffset.js",[],{"ruleId":"251","severity":1,"message":"252","line":2,"column":10,"nodeType":"253","messageId":"254","endLine":2,"endColumn":18},{"ruleId":"251","severity":1,"message":"255","line":4,"column":10,"nodeType":"253","messageId":"254","endLine":4,"endColumn":19},{"ruleId":"251","severity":1,"message":"256","line":12,"column":29,"nodeType":"253","messageId":"254","endLine":12,"endColumn":40},{"ruleId":"251","severity":1,"message":"257","line":18,"column":9,"nodeType":"253","messageId":"254","endLine":18,"endColumn":15},{"ruleId":"251","severity":1,"message":"258","line":20,"column":30,"nodeType":"253","messageId":"254","endLine":20,"endColumn":49},{"ruleId":"251","severity":1,"message":"259","line":21,"column":30,"nodeType":"253","messageId":"254","endLine":21,"endColumn":49},{"ruleId":"251","severity":1,"message":"260","line":29,"column":12,"nodeType":"253","messageId":"254","endLine":29,"endColumn":22},{"ruleId":"251","severity":1,"message":"261","line":34,"column":11,"nodeType":"253","messageId":"254","endLine":34,"endColumn":20},{"ruleId":"251","severity":1,"message":"262","line":51,"column":13,"nodeType":"253","messageId":"254","endLine":51,"endColumn":24},{"ruleId":"251","severity":1,"message":"263","line":56,"column":15,"nodeType":"253","messageId":"254","endLine":56,"endColumn":22},{"ruleId":"264","severity":1,"message":"265","line":57,"column":39,"nodeType":"266","messageId":"267","endLine":57,"endColumn":41},{"ruleId":"268","severity":1,"message":"269","line":58,"column":38,"nodeType":"270","messageId":"271","endLine":58,"endColumn":40},{"ruleId":"268","severity":1,"message":"269","line":63,"column":46,"nodeType":"270","messageId":"271","endLine":63,"endColumn":48},{"ruleId":"268","severity":1,"message":"269","line":68,"column":46,"nodeType":"270","messageId":"271","endLine":68,"endColumn":48},{"ruleId":"268","severity":1,"message":"269","line":73,"column":45,"nodeType":"270","messageId":"271","endLine":73,"endColumn":47},{"ruleId":"272","severity":1,"message":"273","line":129,"column":11,"nodeType":"274","messageId":"275","endLine":157,"endColumn":12},{"ruleId":"272","severity":1,"message":"273","line":168,"column":11,"nodeType":"274","messageId":"275","endLine":189,"endColumn":12},{"ruleId":"276","severity":1,"message":"277","line":207,"column":19,"nodeType":"253","messageId":"278","endLine":207,"endColumn":20},{"ruleId":"251","severity":1,"message":"279","line":210,"column":13,"nodeType":"253","messageId":"254","endLine":210,"endColumn":23},{"ruleId":"268","severity":1,"message":"280","line":218,"column":31,"nodeType":"270","messageId":"271","endLine":218,"endColumn":33},{"ruleId":"268","severity":1,"message":"269","line":219,"column":25,"nodeType":"270","messageId":"271","endLine":219,"endColumn":27},{"ruleId":"268","severity":1,"message":"280","line":223,"column":30,"nodeType":"270","messageId":"271","endLine":223,"endColumn":32},{"ruleId":"268","severity":1,"message":"269","line":231,"column":34,"nodeType":"270","messageId":"271","endLine":231,"endColumn":36},{"ruleId":"268","severity":1,"message":"269","line":232,"column":25,"nodeType":"270","messageId":"271","endLine":232,"endColumn":27},{"ruleId":"268","severity":1,"message":"280","line":236,"column":30,"nodeType":"270","messageId":"271","endLine":236,"endColumn":32},{"ruleId":"268","severity":1,"message":"280","line":252,"column":25,"nodeType":"270","messageId":"271","endLine":252,"endColumn":27},{"ruleId":"268","severity":1,"message":"280","line":253,"column":33,"nodeType":"270","messageId":"271","endLine":253,"endColumn":35},{"ruleId":"268","severity":1,"message":"269","line":258,"column":38,"nodeType":"270","messageId":"271","endLine":258,"endColumn":40},{"ruleId":"268","severity":1,"message":"269","line":265,"column":30,"nodeType":"270","messageId":"271","endLine":265,"endColumn":32},{"ruleId":"268","severity":1,"message":"280","line":266,"column":33,"nodeType":"270","messageId":"271","endLine":266,"endColumn":35},{"ruleId":"268","severity":1,"message":"269","line":272,"column":38,"nodeType":"270","messageId":"271","endLine":272,"endColumn":40},{"ruleId":"272","severity":1,"message":"273","line":288,"column":11,"nodeType":"274","messageId":"275","endLine":291,"endColumn":12},{"ruleId":"281","severity":1,"message":"282","line":329,"column":23,"nodeType":"283","messageId":"284","endLine":329,"endColumn":125,"fix":"285"},{"ruleId":"281","severity":1,"message":"282","line":340,"column":23,"nodeType":"283","messageId":"284","endLine":340,"endColumn":96,"fix":"286"},{"ruleId":"268","severity":1,"message":"280","line":360,"column":50,"nodeType":"270","messageId":"271","endLine":360,"endColumn":52},{"ruleId":"287","severity":1,"message":"288","line":362,"column":19,"nodeType":"283","endLine":362,"endColumn":196},{"ruleId":"289","severity":1,"message":"290","line":365,"column":27,"nodeType":"283","endLine":365,"endColumn":109},{"ruleId":"289","severity":1,"message":"290","line":415,"column":39,"nodeType":"283","endLine":415,"endColumn":214},{"ruleId":"268","severity":1,"message":"280","line":415,"column":78,"nodeType":"270","messageId":"271","endLine":415,"endColumn":80},{"ruleId":"289","severity":1,"message":"290","line":419,"column":39,"nodeType":"283","endLine":419,"endColumn":214},{"ruleId":"268","severity":1,"message":"280","line":419,"column":78,"nodeType":"270","messageId":"271","endLine":419,"endColumn":80},{"ruleId":"289","severity":1,"message":"290","line":430,"column":62,"nodeType":"283","endLine":430,"endColumn":118},{"ruleId":"281","severity":1,"message":"282","line":432,"column":43,"nodeType":"283","messageId":"284","endLine":432,"endColumn":87,"fix":"291"},{"ruleId":"268","severity":1,"message":"269","line":442,"column":112,"nodeType":"270","messageId":"271","endLine":442,"endColumn":114},{"ruleId":"268","severity":1,"message":"269","line":462,"column":102,"nodeType":"270","messageId":"271","endLine":462,"endColumn":104},{"ruleId":"268","severity":1,"message":"269","line":466,"column":125,"nodeType":"270","messageId":"271","endLine":466,"endColumn":127},{"ruleId":"268","severity":1,"message":"269","line":470,"column":144,"nodeType":"270","messageId":"271","endLine":470,"endColumn":146},{"ruleId":"268","severity":1,"message":"269","line":474,"column":156,"nodeType":"270","messageId":"271","endLine":474,"endColumn":158},{"ruleId":"251","severity":1,"message":"292","line":1,"column":17,"nodeType":"253","messageId":"254","endLine":1,"endColumn":25},{"ruleId":"251","severity":1,"message":"293","line":3,"column":5,"nodeType":"253","messageId":"254","endLine":3,"endColumn":20},{"ruleId":"251","severity":1,"message":"294","line":3,"column":21,"nodeType":"253","messageId":"254","endLine":3,"endColumn":36},{"ruleId":"251","severity":1,"message":"295","line":4,"column":5,"nodeType":"253","messageId":"254","endLine":4,"endColumn":25},{"ruleId":"296","severity":1,"message":"297","line":13,"column":6,"nodeType":"298","endLine":13,"endColumn":14,"suggestions":"299"},{"ruleId":"268","severity":1,"message":"280","line":25,"column":24,"nodeType":"270","messageId":"271","endLine":25,"endColumn":26},{"ruleId":"268","severity":1,"message":"269","line":31,"column":15,"nodeType":"270","messageId":"271","endLine":31,"endColumn":17},{"ruleId":"268","severity":1,"message":"280","line":57,"column":32,"nodeType":"270","messageId":"271","endLine":57,"endColumn":34},{"ruleId":"251","severity":1,"message":"300","line":8,"column":8,"nodeType":"253","messageId":"254","endLine":8,"endColumn":13},{"ruleId":"251","severity":1,"message":"301","line":13,"column":23,"nodeType":"253","messageId":"254","endLine":13,"endColumn":37},{"ruleId":"251","severity":1,"message":"302","line":18,"column":25,"nodeType":"253","messageId":"254","endLine":18,"endColumn":39},{"ruleId":"251","severity":1,"message":"303","line":19,"column":12,"nodeType":"253","messageId":"254","endLine":19,"endColumn":19},{"ruleId":"251","severity":1,"message":"304","line":19,"column":21,"nodeType":"253","messageId":"254","endLine":19,"endColumn":31},{"ruleId":"251","severity":1,"message":"305","line":20,"column":12,"nodeType":"253","messageId":"254","endLine":20,"endColumn":20},{"ruleId":"251","severity":1,"message":"306","line":20,"column":22,"nodeType":"253","messageId":"254","endLine":20,"endColumn":33},{"ruleId":"251","severity":1,"message":"307","line":21,"column":12,"nodeType":"253","messageId":"254","endLine":21,"endColumn":19},{"ruleId":"251","severity":1,"message":"308","line":21,"column":21,"nodeType":"253","messageId":"254","endLine":21,"endColumn":31},{"ruleId":"251","severity":1,"message":"309","line":22,"column":21,"nodeType":"253","messageId":"254","endLine":22,"endColumn":27},{"ruleId":"296","severity":1,"message":"310","line":26,"column":7,"nodeType":"298","endLine":26,"endColumn":15,"suggestions":"311"},{"ruleId":"268","severity":1,"message":"280","line":36,"column":116,"nodeType":"270","messageId":"271","endLine":36,"endColumn":118},{"ruleId":"251","severity":1,"message":"312","line":7,"column":3,"nodeType":"253","messageId":"254","endLine":7,"endColumn":16},{"ruleId":"251","severity":1,"message":"313","line":8,"column":3,"nodeType":"253","messageId":"254","endLine":8,"endColumn":8},{"ruleId":"251","severity":1,"message":"314","line":10,"column":3,"nodeType":"253","messageId":"254","endLine":10,"endColumn":14},{"ruleId":"251","severity":1,"message":"315","line":13,"column":39,"nodeType":"253","messageId":"254","endLine":13,"endColumn":50},{"ruleId":"251","severity":1,"message":"316","line":16,"column":8,"nodeType":"253","messageId":"254","endLine":16,"endColumn":18},{"ruleId":"251","severity":1,"message":"317","line":17,"column":8,"nodeType":"253","messageId":"254","endLine":17,"endColumn":19},{"ruleId":"272","severity":1,"message":"273","line":37,"column":5,"nodeType":"274","messageId":"275","endLine":47,"endColumn":6},{"ruleId":"296","severity":1,"message":"318","line":48,"column":6,"nodeType":"298","endLine":48,"endColumn":12,"suggestions":"319"},{"ruleId":"296","severity":1,"message":"320","line":92,"column":6,"nodeType":"298","endLine":92,"endColumn":27,"suggestions":"321"},{"ruleId":"268","severity":1,"message":"269","line":94,"column":24,"nodeType":"270","messageId":"271","endLine":94,"endColumn":26},{"ruleId":"268","severity":1,"message":"269","line":94,"column":47,"nodeType":"270","messageId":"271","endLine":94,"endColumn":49},{"ruleId":"268","severity":1,"message":"269","line":94,"column":70,"nodeType":"270","messageId":"271","endLine":94,"endColumn":72},{"ruleId":"251","severity":1,"message":"322","line":100,"column":9,"nodeType":"253","messageId":"254","endLine":100,"endColumn":14},{"ruleId":"289","severity":1,"message":"290","line":161,"column":11,"nodeType":"283","endLine":161,"endColumn":78},{"ruleId":"268","severity":1,"message":"269","line":172,"column":49,"nodeType":"270","messageId":"271","endLine":172,"endColumn":51},{"ruleId":"289","severity":1,"message":"290","line":175,"column":15,"nodeType":"283","endLine":175,"endColumn":78},{"ruleId":"268","severity":1,"message":"280","line":182,"column":29,"nodeType":"270","messageId":"271","endLine":182,"endColumn":31},{"ruleId":"268","severity":1,"message":"280","line":182,"column":52,"nodeType":"270","messageId":"271","endLine":182,"endColumn":54},{"ruleId":"268","severity":1,"message":"280","line":192,"column":33,"nodeType":"270","messageId":"271","endLine":192,"endColumn":35},{"ruleId":"268","severity":1,"message":"269","line":193,"column":38,"nodeType":"270","messageId":"271","endLine":193,"endColumn":40},{"ruleId":"289","severity":1,"message":"290","line":199,"column":15,"nodeType":"283","endLine":199,"endColumn":81},{"ruleId":"268","severity":1,"message":"269","line":208,"column":49,"nodeType":"270","messageId":"271","endLine":208,"endColumn":51},{"ruleId":"289","severity":1,"message":"290","line":211,"column":15,"nodeType":"283","endLine":211,"endColumn":80},{"ruleId":"289","severity":1,"message":"290","line":229,"column":9,"nodeType":"283","endLine":229,"endColumn":77},{"ruleId":"251","severity":1,"message":"323","line":2,"column":9,"nodeType":"253","messageId":"254","endLine":2,"endColumn":21},{"ruleId":"251","severity":1,"message":"324","line":3,"column":9,"nodeType":"253","messageId":"254","endLine":3,"endColumn":20},{"ruleId":"251","severity":1,"message":"325","line":3,"column":22,"nodeType":"253","messageId":"254","endLine":3,"endColumn":33},{"ruleId":"326","severity":1,"message":"327","line":5,"column":3,"nodeType":"253","messageId":"254","endLine":5,"endColumn":7},{"ruleId":"326","severity":1,"message":"328","line":15,"column":9,"nodeType":"253","messageId":"254","endLine":15,"endColumn":16},{"ruleId":"326","severity":1,"message":"329","line":15,"column":17,"nodeType":"253","messageId":"254","endLine":15,"endColumn":28},{"ruleId":"326","severity":1,"message":"330","line":16,"column":10,"nodeType":"253","messageId":"254","endLine":16,"endColumn":21},{"ruleId":"326","severity":1,"message":"331","line":17,"column":10,"nodeType":"253","messageId":"254","endLine":17,"endColumn":26},{"ruleId":"251","severity":1,"message":"332","line":15,"column":10,"nodeType":"253","messageId":"254","endLine":15,"endColumn":24},{"ruleId":"251","severity":1,"message":"333","line":15,"column":26,"nodeType":"253","messageId":"254","endLine":15,"endColumn":43},{"ruleId":"268","severity":1,"message":"280","line":27,"column":22,"nodeType":"270","messageId":"271","endLine":27,"endColumn":24},{"ruleId":"296","severity":1,"message":"334","line":28,"column":5,"nodeType":"298","endLine":28,"endColumn":21,"suggestions":"335"},{"ruleId":"268","severity":1,"message":"280","line":47,"column":38,"nodeType":"270","messageId":"271","endLine":47,"endColumn":40},{"ruleId":"296","severity":1,"message":"336","line":29,"column":6,"nodeType":"298","endLine":29,"endColumn":17,"suggestions":"337"},{"ruleId":"289","severity":1,"message":"290","line":30,"column":16,"nodeType":"283","endLine":30,"endColumn":69},{"ruleId":"326","severity":1,"message":"338","line":1,"column":8,"nodeType":"253","messageId":"254","endLine":1,"endColumn":13},{"ruleId":"326","severity":1,"message":"339","line":1,"column":28,"nodeType":"253","messageId":"254","endLine":1,"endColumn":34},{"ruleId":"326","severity":1,"message":"304","line":22,"column":21,"nodeType":"253","messageId":"254","endLine":22,"endColumn":31},{"ruleId":"326","severity":1,"message":"340","line":23,"column":19,"nodeType":"253","messageId":"254","endLine":23,"endColumn":27},{"ruleId":"268","severity":1,"message":"269","line":37,"column":29,"nodeType":"270","messageId":"271","endLine":37,"endColumn":31},{"ruleId":"296","severity":1,"message":"341","line":64,"column":8,"nodeType":"298","endLine":64,"endColumn":36,"suggestions":"342"},{"ruleId":"296","severity":1,"message":"343","line":31,"column":6,"nodeType":"298","endLine":31,"endColumn":31,"suggestions":"344"},{"ruleId":"296","severity":1,"message":"345","line":39,"column":5,"nodeType":"298","endLine":39,"endColumn":11,"suggestions":"346"},"no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'useDispatch' is defined but never used.","'wallet' is assigned a value but never used.","'setPortfolio_table1' is assigned a value but never used.","'setPortfolio_table2' is assigned a value but never used.","'sort_image' is assigned a value but never used.","'isLoading' is assigned a value but never used.","'makeHistory' is assigned a value but never used.","'level_3' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","default-case","Expected a default case.","SwitchStatement","missingDefaultCase","no-redeclare","'i' is already defined.","redeclared","'onProtocol' is assigned a value but never used.","Expected '!==' and instead saw '!='.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" (which implies rel=\"noopener\") is a security risk in older browsers: see https://mathiasbynens.github.io/rel-noopener/#recommendations","JSXOpeningElement","noTargetBlankWithoutNoreferrer",{"range":"347","text":"348"},{"range":"349","text":"348"},"jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.",{"range":"350","text":"348"},"'useState' is defined but never used.","'portfolio_data1' is defined but never used.","'portfolio_data2' is defined but never used.","'portfolio_table_data' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has an unnecessary dependency: 'Wallet'. Either exclude it or remove the dependency array. Outer scope values like 'Wallet' aren't valid dependencies because mutating them doesn't re-render the component.","ArrayExpression",["351"],"'theme' is defined but never used.","'PORTFOLIO_DATA' is defined but never used.","'setHeaderTitle' is assigned a value but never used.","'loading' is assigned a value but never used.","'setLoading' is assigned a value but never used.","'provider' is assigned a value but never used.","'setProvider' is assigned a value but never used.","'account' is assigned a value but never used.","'setAccount' is assigned a value but never used.","'onOpen' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'headerTitle', and 'location.pathname'. Either include them or remove the dependency array. Outer scope values like 'Header' aren't valid dependencies because mutating them doesn't re-render the component.",["352"],"'BrowserRouter' is defined but never used.","'Route' is defined but never used.","'useNavigate' is defined but never used.","'SET_LOADING' is defined but never used.","'CryptoIcon' is defined but never used.","'DefaultIcon' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'location.pathname'. Either include them or remove the dependency array. Outer scope values like 'Menu' aren't valid dependencies because mutating them doesn't re-render the component.",["353"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array. Outer scope values like 'Menu' aren't valid dependencies because mutating them doesn't re-render the component.",["354"],"'input' is defined but never used.","'initialState' is defined but never used.","'ADD_COUNTER' is defined but never used.","'MIN_COUNTER' is defined but never used.","@typescript-eslint/no-unused-vars","'Link' is defined but never used.","'connect' is defined but never used.","'useSelector' is defined but never used.","'useLocation' is defined but never used.","'ExternalLinkIcon' is defined but never used.","'isModalVisible' is assigned a value but never used.","'setIsModalVisible' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["355"],"React Hook React.useEffect has missing dependencies: 'max' and 'min'. Either include them or remove the dependency array. If 'setValue' needs the current value of 'min', you can also switch to useReducer instead of useState and read 'min' in the reducer.",["356"],"'React' is defined but never used.","'useRef' is defined but never used.","'setError' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'type'. Either include it or remove the dependency array.",["357"],"React Hook React.useEffect has missing dependencies: 'x1' and 'x2'. Either include them or remove the dependency array.",["358"],"React Hook React.useCallback has an unnecessary dependency: 'draw'. Either exclude it or remove the dependency array.",["359"],[16412,16412]," rel=\"noreferrer\"",[17536,17536],[24669,24669],{"desc":"360","fix":"361"},{"desc":"362","fix":"363"},{"desc":"364","fix":"365"},{"desc":"366","fix":"367"},{"desc":"368","fix":"369"},{"desc":"370","fix":"371"},{"desc":"372","fix":"373"},{"desc":"374","fix":"375"},{"desc":"360","fix":"376"},"Update the dependencies array to be: []",{"range":"377","text":"378"},"Update the dependencies array to be: [dispatch, headerTitle, location.pathname]",{"range":"379","text":"380"},"Update the dependencies array to be: [dispatch, location.pathname]",{"range":"381","text":"382"},"Update the dependencies array to be: [walletAddress, dispatch]",{"range":"383","text":"384"},"Update the dependencies array to be: [dispatch, wallet.address]",{"range":"385","text":"386"},"Update the dependencies array to be: [max, min, propValue]",{"range":"387","text":"388"},"Update the dependencies array to be: [name, onCompleted, onError, type]",{"range":"389","text":"390"},"Update the dependencies array to be: [strokeWidth, trailWidth, x1, x2]",{"range":"391","text":"392"},{"range":"393","text":"378"},[524,532],"[]",[1213,1221],"[dispatch, headerTitle, location.pathname]",[1625,1631],"[dispatch, location.pathname]",[3038,3059],"[walletAddress, dispatch]",[1051,1067],"[dispatch, wallet.address]",[678,689],"[max, min, propValue]",[2007,2035],"[name, onCompleted, onError, type]",[703,728],"[strokeWidth, trailWidth, x1, x2]",[884,890]]